# Generated by Django 5.1 on 2024-09-05 05:02

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Donar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200, null=True)),
                ('image', models.FileField(db_index=True, null=True, upload_to='donar_image')),
                ('nationality', models.CharField(choices=[('Indian', 'Indian'), ('Others', 'Others')], max_length=100)),
                ('age', models.IntegerField(db_index=True, null=True)),
                ('sex', models.CharField(choices=[('Female', 'Female'), ('Male', 'Male'), ('Others', 'Others')], max_length=100)),
                ('email', models.CharField(db_index=True, max_length=200, null=True)),
                ('phone', models.BigIntegerField(db_index=True, null=True)),
                ('address', models.TextField(db_index=True, null=True)),
                ('blood_type', models.CharField(choices=[('O+', 'O+'), ('O-', 'O-'), ('B+', 'B+'), ('B-', 'B-'), ('A+', 'A+'), ('A-', 'A-'), ('AB+', 'AB+'), ('AB-', 'AB-')], max_length=10)),
                ('date_of_donation', models.DateField(null=True)),
                ('donation', models.CharField(choices=[('Whole blood', 'Whole blood'), ('Red cell', 'Red cell'), ('plasma', 'plasma'), ('platelate', 'platelate')], max_length=100)),
                ('donar_status', models.CharField(choices=[('Accepted', 'Accepted'), ('Rejected', 'Rejected'), ('pending', 'pending')], max_length=100)),
                ('volume', models.IntegerField(db_index=True, null=True)),
                ('hemoglobin', models.IntegerField(db_index=True, null=True)),
                ('last_donated_date', models.DateField(null=True)),
                ('wieght', models.IntegerField(db_index=True, null=True)),
                ('medical_history', models.TextField(db_index=True, null=True)),
                ('overall_health', models.CharField(choices=[('good', 'good'), ('best', 'best'), ('need improvement', 'need improvement')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('image', models.FileField(db_index=True, null=True, upload_to='patient_image')),
                ('blood_type', models.CharField(choices=[('O+', 'O+'), ('O-', 'O-'), ('B+', 'B+'), ('B-', 'B-'), ('A+', 'A+'), ('A-', 'A-'), ('AB+', 'AB+'), ('AB-', 'AB-')], max_length=10)),
                ('age', models.IntegerField(db_index=True, null=True)),
                ('sex', models.CharField(choices=[('Female', 'Female'), ('Male', 'Male'), ('Others', 'Others')], max_length=100)),
                ('phone', models.BigIntegerField(db_index=True, null=True)),
                ('address', models.TextField(db_index=True, null=True)),
                ('comment', models.TextField(db_index=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
